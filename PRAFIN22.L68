00001044 Starting Address
Assembler used: EASy68K Editor/Assembler v5.16.01
Created On: 18/05/2022 13:09:55

00000000                             1  
00000000                             2  *-----------------------------------------------------------
00000000                             3  * Title      : PRAFIN22
00000000                             4  * Written by : <nombres completos de los autores>
00000000                             5  * Date       : 30/05/2022
00000000                             6  * Description: Emulador de la JARVIS
00000000                             7  *-----------------------------------------------------------
00001000                             8      ORG $1000
00001000= 2800 2A03 50E0 0...        9  EMEM:   DC.W $2800,$2A03,$50E0,$0B60,$5114,$0C70,$1430,$0E40,$7140,$3001,$32FF,$90D0
00001018= 8020 C000 0002 0...       10          DC.W $8020,$C000,$0002,$0003,$0001,$0003,$0002,$0004,$0000,$0000,$0000
0000102E= 0000                      11  EIR:    DC.W 0 ;eregistro de instruccion
00001030= 0000                      12  EPC:    DC.W 0 ;econtador de programa
00001032= 0000                      13  EB0:    DC.W 0 ;eregistro B0
00001034= 0000                      14  EB1:    DC.W 0 ;eregistro B1
00001036= 0000                      15  ER2:    DC.W 0 ;eregistro R2
00001038= 0000                      16  ER3:    DC.W 0 ;eregistro R3
0000103A= 0000                      17  ER4:    DC.W 0 ;eregistro R4
0000103C= 0000                      18  ER5:    DC.W 0 ;eregistro R5
0000103E= 0000                      19  ET6:    DC.W 0 ;eregistro T6
00001040= 0000                      20  ET7:    DC.W 0 ;eregistro T7
00001042= 0000                      21  ESR:    DC.W 0 ;eregistro de estado (00000000 00000ZCN)
00001044                            22  
00001044                            23  START:
00001044  4278 1030                 24      CLR.W EPC
00001048                            25  
00001048                            26  FETCH:
00001048                            27      ;--- IFETCH: INICIO FETCH
00001048                            28          ;*** En esta seccion debeis introducir el codigo necesario para cargar
00001048                            29          ;*** en el EIR la siguiente instruccion a ejecutar, indicada por el EPC,
00001048                            30          ;*** y dejar listo el EPC para que apunte a la siguiente instruccion
00001048                            31      
00001048                            32          ; ESCRIBID VUESTRO CODIGO AQUI
00001048                            33  
00001048  3E38 1030                 34      MOVE.W  EPC,D7
0000104C  CFFC 0002                 35      MULS.W  #2,D7
00001050  3047                      36      MOVE.W  D7,A0
00001052  31E8 1000 102E            37      MOVE.W  EMEM(A0),EIR
00001058  5278 1030                 38      ADD.W   #1,EPC
0000105C                            39          
0000105C                            40      ;--- FFETCH: FIN FETCH
0000105C                            41      
0000105C                            42      
0000105C                            43      ;--- IBRDECOD: INICIO SALTO A DECOD
0000105C                            44          ;*** En esta seccion debeis preparar la pila para llamar a la subrutina
0000105C                            45          ;*** DECOD, llamar a la subrutina, y vaciar la pila correctamente,
0000105C                            46          ;*** almacenando el resultado de la decodificacion en D1
0000105C                            47  
0000105C                            48          ; ESCRIBID VUESTRO CODIGO AQUI
0000105C  5567                      49      SUBQ.W  #2,-(A7)
0000105E  3F38 102E                 50      MOVE.W EIR,-(A7) ;0(A7) [error] revisar memoria
00001062                            51      
00001062                            52          
00001062                            53      ;--- FBRDECOD: FIN SALTO A DECOD
00001062  4EB9 000012B8             54      JSR DECOD  
00001068                            55  
00001068  31DF 102E                 56      MOVE.W  (A7)+,EIR
0000106C  321F                      57      MOVE.W  (A7)+,D1
0000106E                            58      
0000106E                            59      ;--- IBREXEC: INICIO SALTO A FASE DE EJECUCION
0000106E                            60          ;*** Esta seccion se usa para saltar a la fase de ejecucion
0000106E                            61          ;*** NO HACE FALTA MODIFICARLA
0000106E  C2FC 0006                 62      MULU #6,D1
00001072  2241                      63      MOVEA.L D1,A1
00001074  4EE9 1078                 64      JMP JMPLIST(A1)
00001078                            65  JMPLIST:
00001078  4EF9 000010CC             66      JMP ETRA
0000107E  4EF9 000010D0             67      JMP EADD
00001084  4EF9 00001102             68      JMP ESUB
0000108A  4EF9 00001138             69      JMP ENAN
00001090  4EF9 0000113C             70      JMP ESTC
00001096  4EF9 00001140             71      JMP EINC
0000109C  4EF9 00001144             72      JMP ELOA
000010A2  4EF9 00001148             73      JMP ELOAX
000010A8  4EF9 0000114C             74      JMP ESTO
000010AE  4EF9 00001150             75      JMP ESTOX
000010B4  4EF9 00001154             76      JMP EBRI
000010BA  4EF9 00001166             77      JMP EBRZ
000010C0  4EF9 00001182             78      JMP EBRN
000010C6  4EF9 0000119E             79      JMP ESTP
000010CC                            80      ;--- FBREXEC: FIN SALTO A FASE DE EJECUCION
000010CC                            81      
000010CC                            82      
000010CC                            83      ;--- IEXEC: INICIO EJECUCION
000010CC                            84          ;*** En esta seccion debeis implementar la ejecucion de cada einstr.
000010CC                            85      
000010CC                            86      ; ESCRIBID EN CADA ETIQUETA LA FASE DE EJECUCION DE CADA INSTRUCCION
000010CC                            87  ETRA:
000010CC                            88      
000010CC  4EF8 1048                 89      JMP FETCH
000010D0                            90  EADD:
000010D0  3638 102E                 91      MOVE.W  EIR,D3
000010D4  C67C 0070                 92      AND.W   #%0000000001110000,D3  ;OBTENEMOS A 
000010D8  E88B                      93      LSR.L   #4,D3  ; lo he cambiado a 4
000010DA                            94  
000010DA  4EB9 00001206             95      JSR     CREG
000010E0                            96      
000010E0  3403                      97      MOVE.W  D3,D2                ;METEMOS EL OPERANDO A A D2                     
000010E2                            98      
000010E2  3638 102E                 99      MOVE.W  EIR,D3
000010E6  C67C 0700                100      AND.W   #%0000011100000000,D3 ;OBTENEMOS B
000010EA  E08B                     101      LSR.L   #8,D3 ; esto es nuevo
000010EC  4EB9 00001206            102      JSR CREG
000010F2                           103      
000010F2                           104      ;AHORA TEEMOS EL OPERANDO A EN D2 Y B EN D3 Y ADEMAS 
000010F2                           105      ;TENEMOS LA DIRECCION DEL REGISTRO DE B EN A3
000010F2  D642                     106      ADD.W D2,D3
000010F4                           107      
000010F4  40C4                     108      MOVE.W SR,D4 ;ACTUALIZAMOS LOS FLAGS
000010F6  4EB9 000011A2            109      JSR FLAGS
000010FC                           110      
000010FC                           111      
000010FC  3683                     112      MOVE.W D3, (A3)
000010FE  4EF8 1048                113      JMP FETCH
00001102                           114  ESUB:
00001102  3638 102E                115      MOVE.W EIR,D3
00001106  C67C 0070                116      AND.W #%0000000001110000,D3  ;OBTENEMOS A 
0000110A  E88B                     117      LSR.L #4,D3  
0000110C                           118  
0000110C  4EB9 00001206            119      JSR CREG
00001112                           120      
00001112  3403                     121      MOVE.W D3,D2                ;METEMOS EL OPERANDO A A D2                     
00001114                           122      
00001114  3638 102E                123      MOVE.W EIR,D3
00001118  C67C 0700                124      AND.W #%0000011100000000,D3 ;OBTENEMOS B
0000111C  E08B                     125      LSR.L #8,D3
0000111E  4EB9 00001206            126      JSR CREG
00001124                           127      ;AHORA TENEMOS EL OPERANDO A EN D2 Y B EN D3 Y 
00001124                           128      ;ADEMAS TENEMOS LA DIRECCION DEL REGISTRO DE B EN A3
00001124                           129      
00001124  4643                     130      NOT D3
00001126  5243                     131      ADD.W #1,D3  ; ESTO esta mal 100
00001128  D642                     132      ADD.W D2,D3
0000112A                           133      
0000112A                           134      
0000112A                           135      ;Y LOS MOVEMOS AL ESR A NUESTROS EFLAGS
0000112A                           136      
0000112A  40C4                     137      MOVE.W SR,D4 ;ACTUALIZAMOS LOS FLAGS
0000112C  4EB9 000011A2            138      JSR FLAGS
00001132                           139  
00001132  3683                     140      MOVE.W D3, (A3)
00001134  4EF8 1048                141      JMP FETCH
00001138                           142  ENAN:
00001138                           143      
00001138  4EF8 1048                144      JMP FETCH
0000113C                           145  ESTC:
0000113C                           146      
0000113C  4EF8 1048                147      JMP FETCH
00001140                           148  EINC:
00001140                           149      
00001140  4EF8 1048                150      JMP FETCH
00001144                           151  ELOA:
00001144                           152      
00001144  4EF8 1048                153      JMP FETCH
00001148                           154  ELOAX:
00001148                           155      
00001148  4EF8 1048                156      JMP FETCH
0000114C                           157  ESTO:
0000114C                           158      
0000114C  4EF8 1048                159      JMP FETCH
00001150                           160  ESTOX:
00001150                           161      
00001150  4EF8 1048                162      JMP FETCH
00001154                           163  EBRI:
00001154  3A38 102E                164      MOVE.W EIR,D5
00001158  CA7C 0FF0                165      AND.W #$0FF0,D5 ;D5 TENEMOS LA M y LA DESPLAZAMOS A LOS BITS MENOS SIGN 
0000115C  E88D                     166      LSR.L  #4,D5 
0000115E                           167                      ;ESTE SALTO ES INCONDICIONAL POR TANTO PONEMOS
0000115E                           168                      ;LA DIRECCION DE MEMORIA AL EPC Y VOLVEMOS A FETCH
0000115E  31C5 1030                169      MOVE.W D5,EPC
00001162  4EF8 1048                170      JMP FETCH
00001166                           171  EBRZ:
00001166  3A38 102E                172      MOVE.W EIR,D5
0000116A  CA7C 0FF0                173      AND.W #$0FF0,D5  ;D5 TENEMOS LA M, 
0000116E  E88D                     174      LSR.L  #4,D5     ;MOVEMOS LOS 8 BITS 4 POSUICIONES  A LA DERECHA,
00001170                           175                       ;PARA TENER LAS MS EN EL BYTE MENOS SIGN
00001170                           176  
00001170                           177  
00001170  0278 0004 1042           178      AND.W #%0000000000000100,ESR    ;MASCARA DEL BIT 0 
00001176  6700 FED0                179      BEQ FETCH                     ;SI ES 0 A FETCH SI ES UNO MOVEMOS LA 
0000117A                           180                                    ;DIRECCION DE MEMORIA  EPC Y VOLVEMOS A FETCH
0000117A  31C5 1030                181      MOVE.W D5,EPC
0000117E                           182      
0000117E                           183  
0000117E                           184      
0000117E  4EF8 1048                185      JMP FETCH
00001182                           186  EBRN:
00001182  3A38 102E                187      MOVE.W EIR,D5
00001186  CA7C 0FF0                188      AND.W #$0FF0,D5     ;D5 TENEMOS LA M,
0000118A  E88D                     189      LSR.L  #4,D5        ;MOVEMOS LOS 8 BITS 4 POSUICIONES  A LA 
0000118C                           190                          ;DERECHA, PARA TENER LAS MS EN EL BYTE MENOS SIGN
0000118C                           191  
0000118C                           192  
0000118C  0278 0001 1042           193      AND.W #%0000000000000001,ESR   ;MASCARA DEL BIT 2      
00001192  6700 FEB4                194      BEQ FETCH   
00001196                           195                         ;SI ES 0 A FETCH SI ES UNO MOVEMOS LA DIRECCION DE 
00001196                           196                         ;MEMORIA A EPC Y VOLVEMOS A FETCH
00001196  31C5 1030                197      MOVE.W D5,EPC
0000119A                           198      
0000119A  4EF8 1048                199      JMP FETCH
0000119E                           200  
0000119E                           201      
0000119E                           202  ESTP:
0000119E                           203      
0000119E  FFFF FFFF                204      SIMHALT
000011A2                           205      ;--- FEXEC: FIN EJECUCION
000011A2                           206      
000011A2                           207  
000011A2                           208      ;--- ISUBR: INICIO SUBRUTINAS
000011A2                           209          ;*** Aqui debeis incluir las subrutinas que necesite vuestra solucion
000011A2                           210          ;*** SALVO DECOD, que va en la siguiente seccion
000011A2                           211  
000011A2                           212  
000011A2                           213  
000011A2                           214  FLAGS:        ;(00000000 000XNZVC)--(00000000 00000ZCN) 
000011A2                           215     ;FLAG N
000011A2  3A04                     216      MOVE.W D4,D5
000011A4  CA7C 0008                217      AND.W #%0000000000001000,D5  ;HACEMOS UNA MASCARA DEL BIT 3 
000011A8  6700 0008                218      BEQ N0 
000011AC  4EF9 000011BE            219      JMP N1
000011B2                           220  
000011B2                           221  N0:         ;SI EL BIT 3 DE SR ES 0 CAMBIAMOS EL VALOR DE EL BIT 2 DE ESR A 0
000011B2  0278 FFFE 1042           222      AND.W #%1111111111111110,ESR
000011B8  4EF9 000011C4            223      JMP FLAGC
000011BE                           224      
000011BE                           225  N1:         ;SI EL BIT 3 DE SR ES 1 CAMBIAMOS EL VALOR DE EL BIT 2 DE ESR A 1
000011BE  0078 0001 1042           226      OR.W #%0000000000000001,ESR
000011C4                           227      
000011C4                           228  FLAGC:     
000011C4                           229      ;FLAG C     ;(00000000 000XNZVC)--(00000000 00000ZCN)  
000011C4  3A04                     230      MOVE.W D4,D5 
000011C6  CA7C 0001                231      AND.W #%0000000000000001,D5 ;HACEMOS UNA MASCARA DEL BIT 0 
000011CA  6700 0008                232      BEQ C0
000011CE  4EF9 000011E0            233      JMP C1
000011D4                           234  
000011D4                           235  C0:         ;SI EL BIT 0 DE SR ES 0 CAMBIAMOS EL VALOR DE EL BIT 1 DE ESR A 0
000011D4  0278 FFFD 1042           236      AND.W #%1111111111111101,ESR
000011DA  4EF9 000011E6            237      JMP FLAGZ
000011E0                           238      
000011E0                           239  C1:          ;SI EL BIT 0 DE SR ES 1 CAMBIAMOS EL VALOR DE EL BIT 1 DE ESR A 1
000011E0  0078 0002 1042           240      OR.W #%0000000000000010,ESR
000011E6                           241    
000011E6                           242    
000011E6                           243  FLAGZ:  ;(00000000 000XNZVC)--(00000000 00000ZCN)  
000011E6                           244      ;FLAG Z
000011E6  3A04                     245      MOVE.W D4,D5
000011E8  CA7C 0004                246      AND.W #%0000000000000100,D5 ;HACEMOS UNA MASCARA DEL BIT 2 
000011EC  6700 0008                247      BEQ FN0
000011F0  4EF9 000011FE            248      JMP FN1
000011F6                           249  
000011F6                           250  FN0:          ;SI EL BIT 2 DE SR ES 0 CAMBIAMOS EL VALOR DE EL BIT 0 DE ESR A 0
000011F6  0278 FFFB 1042           251      AND.W #%1111111111111011,ESR
000011FC  4E75                     252      RTS
000011FE                           253      
000011FE                           254  FN1:          ;SI EL BIT 2 DE SR ES 1 CAMBIAMOS EL VALOR DE EL BIT 0 DE ESR A 1
000011FE  0078 0004 1042           255      OR.W #%0000000000000100,ESR
00001204  4E75                     256      RTS
00001206                           257  
00001206                           258  
00001206                           259  ;///////////////////////////////////////////////////////////////////////////
00001206                           260  CREG:
00001206  0803 0002                261      BTST.L #2,D3
0000120A  6700 0016                262      BEQ REG0
0000120E  4EF9 00001214            263      JMP REG1
00001214                           264  REG1:
00001214  0803 0001                265      BTST.L #1,D3
00001218  6700 0024                266      BEQ REG10
0000121C  4EF9 0000124C            267      JMP REG11 
00001222                           268  
00001222                           269  REG0:
00001222  0803 0001                270      BTST.L #1,D3
00001226  6700 0032                271      BEQ REG00
0000122A  4EF9 00001230            272      JMP REG01
00001230                           273  REG01:
00001230  0803 0000                274      BTST.L #0,D3
00001234  6700 0046                275      BEQ R2
00001238  4EF9 00001286            276      JMP R3
0000123E                           277  
0000123E                           278  REG10:
0000123E  0803 0000                279      BTST.L #0,D3
00001242  6700 004C                280      BEQ R4
00001246  4EF9 0000129A            281      JMP R5
0000124C                           282  REG11:
0000124C  0803 0000                283      BTST.L #0,D3
00001250  6700 0052                284      BEQ T6
00001254  4EF9 000012AE            285      JMP T7
0000125A                           286  
0000125A                           287  REG00:
0000125A  0803 0000                288      BTST.L #0,D3
0000125E  6700 0008                289      BEQ B0
00001262  4EF9 00001272            290      JMP B1
00001268                           291  
00001268                           292  
00001268                           293  B0:
00001268  3638 1032                294      MOVE.W EB0,D3 ;SABEMOS QUE ES B0
0000126C  47F8 1032                295      LEA EB0, A3
00001270  4E75                     296      RTS
00001272                           297  B1:
00001272  3638 1034                298      MOVE.W EB1,D3 ;SABEMOS QUE ES B1
00001276  47F8 1034                299      LEA EB1, A3
0000127A  4E75                     300      RTS
0000127C                           301  R2:
0000127C  3638 1036                302      MOVE.W ER2,D3 ;SABEMOS QUE ES R2
00001280  47F8 1036                303      LEA ER2, A3
00001284  4E75                     304      RTS 
00001286                           305  R3:
00001286  3638 1038                306      MOVE.W ER3,D3 ;SABEMOS QUE ES R3
0000128A  47F8 1038                307      LEA ER3, A3
0000128E  4E75                     308      RTS
00001290                           309  R4:
00001290  3638 103A                310      MOVE.W ER4,D3 ;SABEMOS QUE ES R4
00001294  47F8 103A                311      LEA ER4, A3
00001298  4E75                     312      RTS
0000129A                           313  R5:
0000129A  3638 103C                314      MOVE.W ER5,D3 ;SABEMOS QUE ES R5 
0000129E  47F8 103C                315      LEA ER5, A3
000012A2  4E75                     316      RTS
000012A4                           317  T6:
000012A4  3638 103E                318      MOVE.W ET6,D3 ;SABEMOS QUE ES T6 
000012A8  47F8 103E                319      LEA ET6, A3    
000012AC  4E75                     320      RTS
000012AE                           321  T7:
000012AE  3638 1040                322      MOVE.W ET7,D3 ;SABEMOS QUE ES T7
000012B2  47F8 1040                323      LEA ET7, A3
000012B6  4E75                     324      RTS
000012B8                           325  
000012B8                           326          ; ESCRIBID VUESTRO CODIGO AQUI
000012B8                           327          
000012B8                           328      ;--- FSUBR: FIN SUBRUTINAS
000012B8                           329      
000012B8                           330  
000012B8                           331      ;--- IDECOD: INICIO DECOD
000012B8                           332          ;*** Tras la etiqueta DECOD, debeis implementar la subrutina de 
000012B8                           333          ;*** decodificacion, que debera ser de libreria, siguiendo la interfaz
000012B8                           334          ;*** especificada en el enunciado
000012B8                           335  DECOD:
000012B8                           336          ; ESCRIBID VUESTRO CODIGO AQUI
000012B8  3F00                     337      MOVE.W D0,-(A7) ;GUARDAMOS LOS VALORES DE ESTOS REGISTROS PORQUE LOS 
000012BA                           338                      ;USAMOS EN DECOD Y ASI NO LOS MODIFICAMOS
000012BA  3F06                     339      MOVE.W D6,-(A7)
000012BC  302F 0008                340      MOVE.W 8(A7),D0 ;METEMOS EL EIR DE LA PILA EN D0
000012C0                           341  
000012C0                           342  
000012C0                           343      ; ESCRIBID VUESTRO CODIGO AQUI
000012C0  0800 000F                344      BTST.L #15,D0
000012C4  6700 0016                345      BEQ O ;SALTAMOS SI EL BIT QUE COMPROBAMOS ES 0 , EN CASO NEGATIVO
000012C8                           346                 
000012C8  4EF9 000012CE            347      JMP I ;LEEMOS LA SIGUIENTE INSTRUCCION JMP YA TENIENDO EN CUENTA QUE ES 1
000012CE                           348  I: 
000012CE  0800 000E                349      BTST.L #14,D0
000012D2  6700 0110                350      BEQ IO
000012D6  4EF9 000013DA            351      JMP II  
000012DC                           352   
000012DC                           353  O:  ;
000012DC  0800 000E                354      BTST.L #14,D0
000012E0  6700 0008                355      BEQ OO
000012E4  4EF9 00001388            356      JMP OI
000012EA                           357  
000012EA                           358  OO:            
000012EA  0800 000D                359          BTST.L #13,D0 ;AL SABER QUE INSTRUCCION ES METEMOS SU VALOR
000012EE  6700 0008                360          BEQ OOO
000012F2  4EF9 00001306            361          JMP OOI            ; NUMERICO ASIGNADO EN ESTA PRACTICA 
000012F8                           362                  ; Y LO METEMOS EN D6 
000012F8                           363  OOO:
000012F8  0800 000C                364      BTST.L #12,D0
000012FC  6700 0016                365      BEQ OOOO
00001300  4EF9 00001322            366      JMP OOOI
00001306                           367          
00001306                           368  OOI:    
00001306  0800 000C                369      BTST.L #12,D0
0000130A  6700 0050                370      BEQ OOIO
0000130E  4EF9 0000134E            371      JMP OOII
00001314                           372  
00001314                           373  OOOO:
00001314  0800 000B                374      BTST.L #11,D0
00001318  6700 0112                375      BEQ ERROR ;ERROR
0000131C  4EF9 00001330            376      JMP OOOOI
00001322                           377  
00001322                           378  OOOI:
00001322  0800 000B                379      BTST.L #11,D0
00001326  6700 0012                380      BEQ OOOIO
0000132A  4EF9 00001344            381      JMP OOOII
00001330                           382  
00001330                           383  OOOOI:;TRA
00001330  3C3C 0000                384      MOVE.W #0,D6
00001334  4EF9 00001430            385      JMP VEC
0000133A                           386  OOOIO: ;ADD
0000133A  3C3C 0001                387      MOVE.W #1,D6
0000133E  4EF9 00001430            388      JMP VEC
00001344                           389  OOOII: ; SUB
00001344  3C3C 0002                390      MOVE.W #2,D6
00001348  4EF9 00001430            391      JMP VEC
0000134E                           392  OOII:
0000134E  0800 000B                393      BTST.L #11,D0
00001352  6700 002A                394      BEQ OOIIO
00001356  4EF9 0000142C            395      JMP ERROR ; ERROR
0000135C                           396  
0000135C                           397  OOIO:
0000135C  0800 000B                398      BTST.L #11,D0
00001360  6700 0008                399      BEQ OOIOO
00001364  4EF9 00001374            400      JMP OOIOI
0000136A                           401  OOIOO: ; NAN
0000136A  3C3C 0003                402      MOVE.W #3,D6
0000136E  4EF9 00001430            403      JMP VEC
00001374                           404  OOIOI: ; STC
00001374  3C3C 0004                405      MOVE.W #4,D6
00001378  4EF9 00001430            406      JMP VEC
0000137E                           407  OOIIO: ; INC
0000137E  3C3C 0005                408      MOVE.W #5,D6
00001382  4EF9 00001430            409      JMP VEC
00001388                           410  
00001388                           411  
00001388                           412  
00001388                           413  
00001388                           414     
00001388                           415  OI:
00001388  0800 000D                416      BTST.L #13,D0
0000138C  6700 0008                417      BEQ OIO
00001390  4EF9 000013A4            418      JMP OII    
00001396                           419  
00001396                           420  OIO:
00001396  0800 000C                421      BTST.L #12,D0
0000139A  6700 0016                422      BEQ OIOO
0000139E  4EF9 000013BC            423      JMP OIOI
000013A4                           424  OII:
000013A4  0800 000C                425      BTST.L #12,D0
000013A8  6700 001C                426      BEQ OIIO
000013AC  4EF9 000013D0            427      JMP OIII
000013B2                           428  OIOO: ;LOA  M   
000013B2  3C3C 0006                429      MOVE.W #6,D6
000013B6  4EF9 00001430            430      JMP VEC     
000013BC                           431  OIOI: ;LOAX M(Bi),Tj
000013BC  3C3C 0007                432      MOVE.W #7,D6
000013C0  4EF9 00001430            433      JMP VEC
000013C6                           434  OIIO: ;STO  M
000013C6  3C3C 0008                435      MOVE.W #8,D6
000013CA  4EF9 00001430            436      JMP VEC
000013D0                           437  OIII: ;STOX Tj,M(Bi)
000013D0  3C3C 0009                438      MOVE.W #9,D6
000013D4  4EF9 00001430            439      JMP VEC 
000013DA                           440  II:   ; STP
000013DA                           441      
000013DA                           442      
000013DA  3C3C 000D                443      MOVE.W #13,D6
000013DE  4EF9 00001430            444      JMP VEC
000013E4                           445      
000013E4                           446  
000013E4                           447  IO:
000013E4  0800 000D                448      BTST.L #13,D0
000013E8  6700 0008                449      BEQ IOO
000013EC  4EF9 00001414            450      JMP IOI
000013F2                           451  IOO:
000013F2  0800 000C                452      BTST.L #12,D0
000013F6  6700 0012                453      BEQ IOOO
000013FA  4EF9 00001400            454      JMP IOOI
00001400                           455      
00001400                           456  IOOI: ;BRZ M
00001400  3C3C 000B                457      MOVE.W #11,D6
00001404  4EF9 00001430            458      JMP VEC
0000140A                           459  IOOO: ;BRI M
0000140A  3C3C 000A                460      MOVE.W #10,D6
0000140E  4EF9 00001430            461      JMP VEC      
00001414                           462  IOI:
00001414  0800 000C                463      BTST.L #12 ,D0
00001418  6700 0008                464      BEQ IOIO
0000141C  4EF9 0000142C            465      JMP ERROR ; error
00001422                           466  
00001422                           467      
00001422                           468  IOIO: ;BRN M
00001422  3C3C 000C                469      MOVE.W #12,D6
00001426  4EF9 00001430            470      JMP VEC
0000142C                           471      
0000142C                           472  
0000142C                           473  
0000142C                           474  
0000142C                           475      
0000142C                           476  ERROR: 
0000142C  FFFF FFFF                477      SIMHALT    
00001430                           478  VEC:
00001430  3F46 000A                479      MOVE.W D6,10(A7) ;AQUI ES DONDE PONEMOS EL ID AL FINAL DE LA PILA 
00001434  4246                     480      CLR D6           
00001436  4EF9 0000143C            481      JMP FINAL 
0000143C                           482         
0000143C                           483  FINAL:
0000143C  3C1F                     484      MOVE.W (A7)+,D6  ;RECUPERAMOS LOS VALORES DE LOS REGISTROS
0000143E                           485                       ;PARA DEJARLOS COMO ESTABAN ANTES
0000143E  301F                     486      MOVE.W (A7)+,D0  ;RTS TENEMOS LA DIRECCION PC Y LUEGO CUANDO 
00001440                           487                       ;VOLVEMOS AL PROG PRINCIPAL RECUPERAMOS EIR E ID
00001440  4E75                     488      RTS
00001442                           489  
00001442                           490  
00001442                           491      ;--- FDECOD: FIN DECOD
00001442                           492      END    START

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
B0                  1268
B1                  1272
C0                  11D4
C1                  11E0
CREG                1206
DECOD               12B8
EADD                10D0
EB0                 1032
EB1                 1034
EBRI                1154
EBRN                1182
EBRZ                1166
EINC                1140
EIR                 102E
ELOA                1144
ELOAX               1148
EMEM                1000
ENAN                1138
EPC                 1030
ER2                 1036
ER3                 1038
ER4                 103A
ER5                 103C
ERROR               142C
ESR                 1042
ESTC                113C
ESTO                114C
ESTOX               1150
ESTP                119E
ESUB                1102
ET6                 103E
ET7                 1040
ETRA                10CC
FETCH               1048
FINAL               143C
FLAGC               11C4
FLAGS               11A2
FLAGZ               11E6
FN0                 11F6
FN1                 11FE
I                   12CE
II                  13DA
IO                  13E4
IOI                 1414
IOIO                1422
IOO                 13F2
IOOI                1400
IOOO                140A
JMPLIST             1078
N0                  11B2
N1                  11BE
O                   12DC
OI                  1388
OII                 13A4
OIII                13D0
OIIO                13C6
OIO                 1396
OIOI                13BC
OIOO                13B2
OO                  12EA
OOI                 1306
OOII                134E
OOIIO               137E
OOIO                135C
OOIOI               1374
OOIOO               136A
OOO                 12F8
OOOI                1322
OOOII               1344
OOOIO               133A
OOOO                1314
OOOOI               1330
R2                  127C
R3                  1286
R4                  1290
R5                  129A
REG0                1222
REG00               125A
REG01               1230
REG1                1214
REG10               123E
REG11               124C
START               1044
T6                  12A4
T7                  12AE
VEC                 1430
