00001044 Starting Address
Assembler used: EASy68K Editor/Assembler v5.16.01
Created On: 23/05/2022 11:49:57

00000000                             1  
00000000                             2  *-----------------------------------------------------------
00000000                             3  * Title      : PRAFIN22
00000000                             4  * Written by : <nombres completos de los autores>
00000000                             5  * Date       : 30/05/2022
00000000                             6  * Description: Emulador de la JARVIS
00000000                             7  *-----------------------------------------------------------
00001000                             8      ORG $1000
00001000= 2800 2A03 50E0 0...        9  EMEM:   DC.W $2800,$2A03,$50E0,$0B60,$5114,$0C70,$1430,$0E40,$7140,$3001,$32FF,$90D0
00001018= 8020 C000 0002 0...       10          DC.W $8020,$C000,$0002,$0003,$0001,$0003,$0002,$0004,$0000,$0000,$0000
0000102E= 0000                      11  EIR:    DC.W 0 ;eregistro de instruccion
00001030= 0000                      12  EPC:    DC.W 0 ;econtador de programa
00001032= 0000                      13  EB0:    DC.W 0 ;eregistro B0
00001034= 0000                      14  EB1:    DC.W 0 ;eregistro B1
00001036= 0000                      15  ER2:    DC.W 0 ;eregistro R2
00001038= 0000                      16  ER3:    DC.W 0 ;eregistro R3
0000103A= 0000                      17  ER4:    DC.W 0 ;eregistro R4
0000103C= 0000                      18  ER5:    DC.W 0 ;eregistro R5
0000103E= 0000                      19  ET6:    DC.W 0 ;eregistro T6
00001040= 0000                      20  ET7:    DC.W 0 ;eregistro T7
00001042= 0000                      21  ESR:    DC.W 0 ;eregistro de estado (00000000 00000ZCN)
00001044                            22  
00001044                            23  START:
00001044  4278 1030                 24      CLR.W EPC
00001048                            25  
00001048                            26  FETCH:
00001048                            27      ;--- IFETCH: INICIO FETCH
00001048                            28          ;*** En esta seccion debeis introducir el codigo necesario para cargar
00001048                            29          ;*** en el EIR la siguiente instruccion a ejecutar, indicada por el EPC,
00001048                            30          ;*** y dejar listo el EPC para que apunte a la siguiente instruccion
00001048                            31      
00001048                            32          ; ESCRIBID VUESTRO CODIGO AQUI
00001048                            33  
00001048  3E38 1030                 34      MOVE.W  EPC,D7
0000104C  CFFC 0002                 35      MULS.W  #2,D7
00001050  3047                      36      MOVE.W  D7,A0
00001052  31E8 1000 102E            37      MOVE.W  EMEM(A0),EIR
00001058  5278 1030                 38      ADD.W   #1,EPC
0000105C                            39          
0000105C                            40      ;--- FFETCH: FIN FETCH
0000105C                            41      
0000105C                            42      
0000105C                            43      ;--- IBRDECOD: INICIO SALTO A DECOD
0000105C                            44          ;*** En esta seccion debeis preparar la pila para llamar a la subrutina
0000105C                            45          ;*** DECOD, llamar a la subrutina, y vaciar la pila correctamente,
0000105C                            46          ;*** almacenando el resultado de la decodificacion en D1
0000105C                            47  
0000105C                            48          ; ESCRIBID VUESTRO CODIGO AQUI
0000105C                            49  
0000105C  3F3C 0000                 50      MOVE.W  #0,-(A7)
00001060  3F38 102E                 51      MOVE.W EIR,-(A7) 
00001064                            52      
00001064                            53  
00001064                            54      
00001064                            55  
00001064                            56          
00001064                            57      ;--- FBRDECOD: FIN SALTO A DECOD
00001064  4EB9 000013E0             58      JSR DECOD  
0000106A                            59  
0000106A  31DF 102E                 60      MOVE.W  (A7)+,EIR
0000106E  321F                      61      MOVE.W  (A7)+,D1
00001070                            62      
00001070                            63      ;--- IBREXEC: INICIO SALTO A FASE DE EJECUCION
00001070                            64          ;*** Esta seccion se usa para saltar a la fase de ejecucion
00001070                            65          ;*** NO HACE FALTA MODIFICARLA
00001070  C2FC 0006                 66      MULU #6,D1
00001074  2241                      67      MOVEA.L D1,A1
00001076  4EE9 107A                 68      JMP JMPLIST(A1)
0000107A                            69  JMPLIST:
0000107A  4EF9 000010CE             70      JMP ETRA
00001080  4EF9 000010FE             71      JMP EADD
00001086  4EF9 00001130             72      JMP ESUB
0000108C  4EF9 00001166             73      JMP ENAN
00001092  4EF9 0000119A             74      JMP ESTC
00001098  4EF9 000011C4             75      JMP EINC
0000109E  4EF9 000011F0             76      JMP ELOA
000010A4  4EF9 0000121C             77      JMP ELOAX
000010AA  4EF9 00001274             78      JMP ESTO
000010B0  4EF9 00001278             79      JMP ESTOX
000010B6  4EF9 0000127C             80      JMP EBRI
000010BC  4EF9 0000128E             81      JMP EBRZ
000010C2  4EF9 000012AA             82      JMP EBRN
000010C8  4EF9 000012C6             83      JMP ESTP
000010CE                            84      ;--- FBREXEC: FIN SALTO A FASE DE EJECUCION
000010CE                            85      
000010CE                            86      
000010CE                            87      ;--- IEXEC: INICIO EJECUCION
000010CE                            88          ;*** En esta seccion debeis implementar la ejecucion de cada einstr.
000010CE                            89      
000010CE                            90      ; ESCRIBID EN CADA ETIQUETA LA FASE DE EJECUCION DE CADA INSTRUCCION
000010CE                            91  ETRA:
000010CE                            92      ;FALTA REVISAR!
000010CE  3638 102E                 93      MOVE.W  EIR,D3
000010D2  C67C 0070                 94      AND.W   #%0000000001110000,D3  ;OBTENEMOS A 
000010D6  E88B                      95      LSR.L   #4,D3  ;movemos desplazamos 4 bits
000010D8                            96      
000010D8  4EB9 0000132E             97      JSR CREG ;Descubrimos A y recogemos su contenido
000010DE  3403                      98      MOVE.W D3,D2 ;Contenido de A movido a D2
000010E0                            99      
000010E0  40C4                     100      MOVE.w SR, D4 ;actualizamos flags al mover el dato
000010E2  4EB9 000012CA            101      JSR FLAGS 
000010E8                           102      
000010E8  3638 102E                103      MOVE.W  EIR,D3
000010EC  C67C 0700                104      AND.W   #%0000011100000000,D3 ;OBTENEMOS B
000010F0  E08B                     105      LSR.L   #8,D3 ; desplazamos 8 bits
000010F2  4EB9 0000132E            106      JSR CREG
000010F8                           107      
000010F8  3682                     108      MOVE.W D2, (A3) ;copiamos el contenido de A en B
000010FA                           109      
000010FA  4EF8 1048                110      JMP FETCH
000010FE                           111  EADD:
000010FE  3638 102E                112      MOVE.W  EIR,D3
00001102  C67C 0070                113      AND.W   #%0000000001110000,D3  ;OBTENEMOS A 
00001106  E88B                     114      LSR.L   #4,D3  ; lo he cambiado a 4
00001108                           115  
00001108  4EB9 0000132E            116      JSR     CREG
0000110E                           117      
0000110E  3403                     118      MOVE.W  D3,D2                ;METEMOS EL OPERANDO A A D2                     
00001110                           119      
00001110  3638 102E                120      MOVE.W  EIR,D3
00001114  C67C 0700                121      AND.W   #%0000011100000000,D3 ;OBTENEMOS B
00001118  E08B                     122      LSR.L   #8,D3 ; esto es nuevo
0000111A  4EB9 0000132E            123      JSR CREG
00001120                           124      
00001120                           125      ;AHORA TEEMOS EL OPERANDO A EN D2 Y B EN D3 Y ADEMAS 
00001120                           126      ;TENEMOS LA DIRECCION DEL REGISTRO DE B EN A3
00001120  D642                     127      ADD.W D2,D3
00001122                           128      
00001122  40C4                     129      MOVE.W SR,D4 ;ACTUALIZAMOS LOS FLAGS
00001124  4EB9 000012CA            130      JSR FLAGS
0000112A                           131      
0000112A                           132      
0000112A  3683                     133      MOVE.W D3, (A3)
0000112C  4EF8 1048                134      JMP FETCH
00001130                           135  ESUB:
00001130  3638 102E                136      MOVE.W EIR,D3
00001134  C67C 0070                137      AND.W #%0000000001110000,D3  ;OBTENEMOS A 
00001138  E88B                     138      LSR.L #4,D3  
0000113A                           139  
0000113A  4EB9 0000132E            140      JSR CREG
00001140                           141      
00001140  3403                     142      MOVE.W D3,D2                ;METEMOS EL OPERANDO A A D2                     
00001142                           143      
00001142  3638 102E                144      MOVE.W EIR,D3
00001146  C67C 0700                145      AND.W #%0000011100000000,D3 ;OBTENEMOS B
0000114A  E08B                     146      LSR.L #8,D3
0000114C  4EB9 0000132E            147      JSR CREG
00001152                           148      ;AHORA TENEMOS EL OPERANDO A EN D2 Y B EN D3 Y 
00001152                           149      ;ADEMAS TENEMOS LA DIRECCION DEL REGISTRO DE B EN A3
00001152                           150      
00001152  4643                     151      NOT D3
00001154  5243                     152      ADD.W #1,D3  ; ESTO esta mal 100
00001156  D642                     153      ADD.W D2,D3
00001158                           154      
00001158                           155      
00001158                           156      ;Y LOS MOVEMOS AL ESR A NUESTROS EFLAGS
00001158                           157      
00001158  40C4                     158      MOVE.W SR,D4 ;ACTUALIZAMOS LOS FLAGS
0000115A  4EB9 000012CA            159      JSR FLAGS
00001160                           160  
00001160  3683                     161      MOVE.W D3, (A3)
00001162  4EF8 1048                162      JMP FETCH
00001166                           163  ENAN:
00001166  3638 102E                164      MOVE.W EIR,D3
0000116A  C67C 0070                165      AND.W #%0000000001110000,D3  ;OBTENEMOS A 
0000116E  E88B                     166      LSR.L #4,D3  
00001170                           167  
00001170  4EB9 0000132E            168      JSR CREG
00001176  3403                     169      MOVE.W D3,D2                ;METEMOS EL OPERANDO A A D2    
00001178                           170      
00001178  3638 102E                171      MOVE.W EIR,D3
0000117C  C67C 0700                172      AND.W #%0000011100000000,D3 ;OBTENEMOS B
00001180  E08B                     173      LSR.L #8,D3
00001182  4EB9 0000132E            174      JSR CREG
00001188                           175      ;AHORA TENEMOS EL OPERANDO A EN D2 Y B EN D3 Y 
00001188                           176      ;ADEMAS TENEMOS LA DIRECCION DEL REGISTRO DE B EN A3
00001188                           177      
00001188                           178      ;Equivalente a NAND
00001188  C642                     179      AND.W D2, D3
0000118A  4643                     180      NOT.W D3 
0000118C                           181      
0000118C  40C4                     182      MOVE.W SR,D4 ;ACTUALIZAMOS LOS FLAGS
0000118E  4EB9 000012CA            183      JSR FLAGS  
00001194                           184      
00001194  3683                     185      MOVE.W D3, (A3) ;Movemos el dato a B
00001196  4EF8 1048                186      JMP FETCH
0000119A                           187  ESTC:
0000119A                           188      ;FALTA REVISAR!
0000119A  3638 102E                189      MOVE.W EIR,D3
0000119E  C67C 00FF                190      AND.W #%0000000011111111,D3
000011A2  4883                     191      EXT.W D3 ;K extendido
000011A4                           192      
000011A4  3403                     193      MOVE.W D3, D2 ; Movemos k a D2
000011A6                           194      
000011A6  40C4                     195      MOVE.W SR,D4 ;Actualizamos flags
000011A8  4EB9 000012CA            196      JSR FLAGS
000011AE                           197      
000011AE  3638 102E                198      MOVE.W EIR, D3 
000011B2  C67C 0700                199      AND.W #%0000011100000000,D3
000011B6  E08B                     200      LSR.L #8,D3 ;Hayamos donde colocar el valor
000011B8                           201  
000011B8  4EB9 0000132E            202      JSR CREG ;Buscamos posicion de memoria donde almacenar
000011BE                           203      
000011BE  3682                     204      MOVE.W D2, (A3) ; Almacenamos en la posicion de memoria necesaria
000011C0  4EF8 1048                205      JMP FETCH
000011C4                           206  EINC:
000011C4                           207      ;FALTA REVISAR
000011C4  3638 102E                208      MOVE.W EIR,D3
000011C8  C67C 00FF                209      AND.W #%0000000011111111,D3
000011CC  4883                     210      EXT.W D3 ;K extendido
000011CE  3403                     211      MOVE.W D3, D2 ; Movemos K a D2
000011D0                           212      
000011D0  3638 102E                213      MOVE.W EIR, D3 
000011D4  C67C 0700                214      AND.W #%0000011100000000,D3
000011D8  E08B                     215      LSR.L #8,D3 
000011DA  4EB9 0000132E            216      JSR CREG ;Hayamos B D3=VALOR, A3=POSICION
000011E0                           217      
000011E0  D642                     218      ADD.W D2, D3
000011E2                           219      
000011E2  40C4                     220      MOVE.W SR,D4 ;Actualizamos flags
000011E4  4EB9 000012CA            221      JSR FLAGS
000011EA                           222  
000011EA  3683                     223      MOVE.W D3, (A3) 
000011EC  4EF8 1048                224      JMP FETCH
000011F0                           225  ELOA:
000011F0                           226      ;FALTA REVISAR
000011F0  3638 102E                227      MOVE.W EIR, D3 
000011F4  C67C 0FF0                228      AND.W #%0000111111110000,D3 ;Mascara
000011F8  E88B                     229      LSR.L #4, D3 ;Tenemos M
000011FA                           230      
000011FA  3403                     231      MOVE D3, D2 ; ALMACENAMOS M EN D2
000011FC                           232      
000011FC  363C 0006                233      MOVE.W #%0000000000000110, D3 ;Tenemos T6
00001200  4EB9 0000132E            234      JSR CREG ;Tenemos poscion y contenido de T6
00001206                           235      
00001206  C4FC 0002                236      MULU.W #2,D2 ;Multiplicamos por 2 ya que en la memoria son LONG almacenados como WORD
0000120A  3442                     237      MOVE.W D2, A2
0000120C                           238      
0000120C  36AA 1000                239      MOVE.W EMEM(A2),(A3)
00001210  40C4                     240      MOVE.W SR,D4 ;Actualizamos flags
00001212  4EB9 000012CA            241      JSR FLAGS
00001218                           242      
00001218  4EF8 1048                243      JMP FETCH
0000121C                           244  ELOAX:
0000121C                           245      ;FALTA REVISAR CUANDO HAGA EL BUCLE
0000121C                           246      ;HACE BIEN LOS MOVIMIENTOS
0000121C  3638 102E                247      MOVE.W EIR, D3 
00001220  C67C 0FF0                248      AND.W #%0000111111110000,D3 ;Mascara
00001224  E88B                     249      LSR.L #4, D3 ;Tenemos M
00001226                           250      ;MOVE.W #28, A2
00001226                           251      ;MOVE.W EMEM(A2),D6
00001226                           252      
00001226  45F8 1000                253      LEA.L EMEM,A2 ;Hayamos la direccion de EMEM
0000122A  3403                     254      MOVE.W D3,D2  ;Guardamos M
0000122C                           255      
0000122C  3638 102E                256      MOVE.W EIR, D3 
00001230  C67C 0008                257      AND.W #%0000000000001000,D3 ;Mascara
00001234  E68B                     258      LSR.L #3, D3 ;Tenemos i
00001236  0883 0001                259      BCLR.L #1,D3
0000123A  0883 0002                260      BCLR.L #2,D3 ;Ahora tendremos en D3 00X -> X = 1 o 0
0000123E  4EB9 0000132E            261      JSR CREG ; Hayamos contenido de Bi
00001244                           262      
00001244  D443                     263      ADD.W D3, D2 ;Ahora tenemos contenido Bi + M
00001246  C4FC 0002                264      MULU.W #2,D2 ;Multiplicamos por 2 ya que en la memoria son LONG almacenados como WORD
0000124A                           265      
0000124A  3638 102E                266      MOVE.W EIR, D3 
0000124E  C67C 0004                267      AND.W #%0000000000000100,D3 ;Mascara
00001252  E48B                     268      LSR.L #2, D3 ;Tenemos j
00001254  08C3 0001                269      BSET.L #1,D3
00001258  08C3 0002                270      BSET.L #2,D3 ;Ahora tendremos en D3 11X -> X = 1 o 0
0000125C  4EB9 0000132E            271      JSR CREG ; Hayamos contenido de Tj y direccion
00001262                           272      
00001262  3442                     273      MOVE.W D2, A2
00001264  36AA 1000                274      MOVE.W EMEM(A2),(A3) ;Movemos [M + [Bi]] -> A3
00001268                           275      
00001268  40C4                     276      MOVE.W SR,D4 ;Actualizamos flags
0000126A  4EB9 000012CA            277      JSR FLAGS
00001270                           278      
00001270  4EF8 1048                279      JMP FETCH
00001274                           280  ESTO:
00001274                           281      
00001274  4EF8 1048                282      JMP FETCH
00001278                           283  ESTOX:
00001278                           284      
00001278  4EF8 1048                285      JMP FETCH
0000127C                           286  EBRI:
0000127C  3A38 102E                287      MOVE.W EIR,D5
00001280  CA7C 0FF0                288      AND.W #$0FF0,D5 ;D5 TENEMOS LA M y LA DESPLAZAMOS A LOS BITS MENOS SIGN 
00001284  E88D                     289      LSR.L  #4,D5 
00001286                           290                      ;ESTE SALTO ES INCONDICIONAL POR TANTO PONEMOS
00001286                           291                      ;LA DIRECCION DE MEMORIA AL EPC Y VOLVEMOS A FETCH
00001286  31C5 1030                292      MOVE.W D5,EPC
0000128A  4EF8 1048                293      JMP FETCH
0000128E                           294  EBRZ:
0000128E  3A38 102E                295      MOVE.W EIR,D5
00001292  CA7C 0FF0                296      AND.W #$0FF0,D5  ;D5 TENEMOS LA M, 
00001296  E88D                     297      LSR.L  #4,D5     ;MOVEMOS LOS 8 BITS 4 POSUICIONES  A LA DERECHA,
00001298                           298                       ;PARA TENER LAS MS EN EL BYTE MENOS SIGN
00001298                           299  
00001298                           300  
00001298  0278 0004 1042           301      AND.W #%0000000000000100,ESR    ;MASCARA DEL BIT 0 
0000129E  6700 FDA8                302      BEQ FETCH                     ;SI ES 0 A FETCH SI ES UNO MOVEMOS LA 
000012A2                           303                                    ;DIRECCION DE MEMORIA  EPC Y VOLVEMOS A FETCH
000012A2  31C5 1030                304      MOVE.W D5,EPC
000012A6                           305      
000012A6                           306  
000012A6                           307      
000012A6  4EF8 1048                308      JMP FETCH
000012AA                           309  EBRN:
000012AA  3A38 102E                310      MOVE.W EIR,D5
000012AE  CA7C 0FF0                311      AND.W #$0FF0,D5     ;D5 TENEMOS LA M,
000012B2  E88D                     312      LSR.L  #4,D5        ;MOVEMOS LOS 8 BITS 4 POSUICIONES  A LA 
000012B4                           313                          ;DERECHA, PARA TENER LAS MS EN EL BYTE MENOS SIGN
000012B4                           314  
000012B4                           315  
000012B4  0278 0001 1042           316      AND.W #%0000000000000001,ESR   ;MASCARA DEL BIT 2      
000012BA  6700 FD8C                317      BEQ FETCH   
000012BE                           318                         ;SI ES 0 A FETCH SI ES UNO MOVEMOS LA DIRECCION DE 
000012BE                           319                         ;MEMORIA A EPC Y VOLVEMOS A FETCH
000012BE  31C5 1030                320      MOVE.W D5,EPC
000012C2                           321      
000012C2  4EF8 1048                322      JMP FETCH
000012C6                           323  
000012C6                           324      
000012C6                           325  ESTP:
000012C6                           326      
000012C6  FFFF FFFF                327      SIMHALT
000012CA                           328      ;--- FEXEC: FIN EJECUCION
000012CA                           329      
000012CA                           330  
000012CA                           331      ;--- ISUBR: INICIO SUBRUTINAS
000012CA                           332          ;*** Aqui debeis incluir las subrutinas que necesite vuestra solucion
000012CA                           333          ;*** SALVO DECOD, que va en la siguiente seccion
000012CA                           334  
000012CA                           335  
000012CA                           336  
000012CA                           337  FLAGS:        ;(00000000 000XNZVC)--(00000000 00000ZCN) 
000012CA                           338     ;FLAG N
000012CA  3A04                     339      MOVE.W D4,D5
000012CC  CA7C 0008                340      AND.W #%0000000000001000,D5  ;HACEMOS UNA MASCARA DEL BIT 3 
000012D0  6700 0008                341      BEQ N0 
000012D4  4EF9 000012E6            342      JMP N1
000012DA                           343  
000012DA                           344  N0:         ;SI EL BIT 3 DE SR ES 0 CAMBIAMOS EL VALOR DE EL BIT 2 DE ESR A 0
000012DA  0278 FFFE 1042           345      AND.W #%1111111111111110,ESR
000012E0  4EF9 000012EC            346      JMP FLAGC
000012E6                           347      
000012E6                           348  N1:         ;SI EL BIT 3 DE SR ES 1 CAMBIAMOS EL VALOR DE EL BIT 2 DE ESR A 1
000012E6  0078 0001 1042           349      OR.W #%0000000000000001,ESR
000012EC                           350      
000012EC                           351  FLAGC:     
000012EC                           352      ;FLAG C     ;(00000000 000XNZVC)--(00000000 00000ZCN)  
000012EC  3A04                     353      MOVE.W D4,D5 
000012EE  CA7C 0001                354      AND.W #%0000000000000001,D5 ;HACEMOS UNA MASCARA DEL BIT 0 
000012F2  6700 0008                355      BEQ C0
000012F6  4EF9 00001308            356      JMP C1
000012FC                           357  
000012FC                           358  C0:         ;SI EL BIT 0 DE SR ES 0 CAMBIAMOS EL VALOR DE EL BIT 1 DE ESR A 0
000012FC  0278 FFFD 1042           359      AND.W #%1111111111111101,ESR
00001302  4EF9 0000130E            360      JMP FLAGZ
00001308                           361      
00001308                           362  C1:          ;SI EL BIT 0 DE SR ES 1 CAMBIAMOS EL VALOR DE EL BIT 1 DE ESR A 1
00001308  0078 0002 1042           363      OR.W #%0000000000000010,ESR
0000130E                           364    
0000130E                           365    
0000130E                           366  FLAGZ:  ;(00000000 000XNZVC)--(00000000 00000ZCN)  
0000130E                           367      ;FLAG Z
0000130E  3A04                     368      MOVE.W D4,D5
00001310  CA7C 0004                369      AND.W #%0000000000000100,D5 ;HACEMOS UNA MASCARA DEL BIT 2 
00001314  6700 0008                370      BEQ FN0
00001318  4EF9 00001326            371      JMP FN1
0000131E                           372  
0000131E                           373  FN0:          ;SI EL BIT 2 DE SR ES 0 CAMBIAMOS EL VALOR DE EL BIT 0 DE ESR A 0
0000131E  0278 FFFB 1042           374      AND.W #%1111111111111011,ESR
00001324  4E75                     375      RTS
00001326                           376      
00001326                           377  FN1:          ;SI EL BIT 2 DE SR ES 1 CAMBIAMOS EL VALOR DE EL BIT 0 DE ESR A 1
00001326  0078 0004 1042           378      OR.W #%0000000000000100,ESR
0000132C  4E75                     379      RTS
0000132E                           380  
0000132E                           381  
0000132E                           382  ;///////////////////////////////////////////////////////////////////////////
0000132E                           383  CREG:
0000132E  0803 0002                384      BTST.L #2,D3
00001332  6700 0016                385      BEQ REG0
00001336  4EF9 0000133C            386      JMP REG1
0000133C                           387  REG1:
0000133C  0803 0001                388      BTST.L #1,D3
00001340  6700 0024                389      BEQ REG10
00001344  4EF9 00001374            390      JMP REG11 
0000134A                           391  
0000134A                           392  REG0:
0000134A  0803 0001                393      BTST.L #1,D3
0000134E  6700 0032                394      BEQ REG00
00001352  4EF9 00001358            395      JMP REG01
00001358                           396  REG01:
00001358  0803 0000                397      BTST.L #0,D3
0000135C  6700 0046                398      BEQ R2
00001360  4EF9 000013AE            399      JMP R3
00001366                           400  
00001366                           401  REG10:
00001366  0803 0000                402      BTST.L #0,D3
0000136A  6700 004C                403      BEQ R4
0000136E  4EF9 000013C2            404      JMP R5
00001374                           405  REG11:
00001374  0803 0000                406      BTST.L #0,D3
00001378  6700 0052                407      BEQ T6
0000137C  4EF9 000013D6            408      JMP T7
00001382                           409  
00001382                           410  REG00:
00001382  0803 0000                411      BTST.L #0,D3
00001386  6700 0008                412      BEQ B0
0000138A  4EF9 0000139A            413      JMP B1
00001390                           414  
00001390                           415  
00001390                           416  B0:
00001390  3638 1032                417      MOVE.W EB0,D3 ;SABEMOS QUE ES B0
00001394  47F8 1032                418      LEA EB0, A3
00001398  4E75                     419      RTS
0000139A                           420  B1:
0000139A  3638 1034                421      MOVE.W EB1,D3 ;SABEMOS QUE ES B1
0000139E  47F8 1034                422      LEA EB1, A3
000013A2  4E75                     423      RTS
000013A4                           424  R2:
000013A4  3638 1036                425      MOVE.W ER2,D3 ;SABEMOS QUE ES R2
000013A8  47F8 1036                426      LEA ER2, A3
000013AC  4E75                     427      RTS 
000013AE                           428  R3:
000013AE  3638 1038                429      MOVE.W ER3,D3 ;SABEMOS QUE ES R3
000013B2  47F8 1038                430      LEA ER3, A3
000013B6  4E75                     431      RTS
000013B8                           432  R4:
000013B8  3638 103A                433      MOVE.W ER4,D3 ;SABEMOS QUE ES R4
000013BC  47F8 103A                434      LEA ER4, A3
000013C0  4E75                     435      RTS
000013C2                           436  R5:
000013C2  3638 103C                437      MOVE.W ER5,D3 ;SABEMOS QUE ES R5 
000013C6  47F8 103C                438      LEA ER5, A3
000013CA  4E75                     439      RTS
000013CC                           440  T6:
000013CC  3638 103E                441      MOVE.W ET6,D3 ;SABEMOS QUE ES T6 
000013D0  47F8 103E                442      LEA ET6, A3    
000013D4  4E75                     443      RTS
000013D6                           444  T7:
000013D6  3638 1040                445      MOVE.W ET7,D3 ;SABEMOS QUE ES T7
000013DA  47F8 1040                446      LEA ET7, A3
000013DE  4E75                     447      RTS
000013E0                           448  
000013E0                           449          ; ESCRIBID VUESTRO CODIGO AQUI
000013E0                           450          
000013E0                           451      ;--- FSUBR: FIN SUBRUTINAS
000013E0                           452      
000013E0                           453  
000013E0                           454      ;--- IDECOD: INICIO DECOD
000013E0                           455          ;*** Tras la etiqueta DECOD, debeis implementar la subrutina de 
000013E0                           456          ;*** decodificacion, que debera ser de libreria, siguiendo la interfaz
000013E0                           457          ;*** especificada en el enunciado
000013E0                           458  DECOD:
000013E0                           459          ; ESCRIBID VUESTRO CODIGO AQUI
000013E0  3F00                     460      MOVE.W D0,-(A7) ;GUARDAMOS LOS VALORES DE ESTOS REGISTROS PORQUE LOS 
000013E2                           461                      ;USAMOS EN DECOD Y ASI NO LOS MODIFICAMOS
000013E2  3F06                     462      MOVE.W D6,-(A7)
000013E4  302F 0008                463      MOVE.W 8(A7),D0 ;METEMOS EL EIR DE LA PILA EN D0
000013E8                           464  
000013E8                           465  
000013E8                           466      ; ESCRIBID VUESTRO CODIGO AQUI
000013E8  0800 000F                467      BTST.L #15,D0
000013EC  6700 0016                468      BEQ O ;SALTAMOS SI EL BIT QUE COMPROBAMOS ES 0 , EN CASO NEGATIVO
000013F0                           469                 
000013F0  4EF9 000013F6            470      JMP I ;LEEMOS LA SIGUIENTE INSTRUCCION JMP YA TENIENDO EN CUENTA QUE ES 1
000013F6                           471  I: 
000013F6  0800 000E                472      BTST.L #14,D0
000013FA  6700 0110                473      BEQ IO
000013FE  4EF9 00001502            474      JMP II  
00001404                           475   
00001404                           476  O:  ;
00001404  0800 000E                477      BTST.L #14,D0
00001408  6700 0008                478      BEQ OO
0000140C  4EF9 000014B0            479      JMP OI
00001412                           480  
00001412                           481  OO:            
00001412  0800 000D                482          BTST.L #13,D0 ;AL SABER QUE INSTRUCCION ES METEMOS SU VALOR
00001416  6700 0008                483          BEQ OOO
0000141A  4EF9 0000142E            484          JMP OOI            ; NUMERICO ASIGNADO EN ESTA PRACTICA 
00001420                           485                  ; Y LO METEMOS EN D6 
00001420                           486  OOO:
00001420  0800 000C                487      BTST.L #12,D0
00001424  6700 0016                488      BEQ OOOO
00001428  4EF9 0000144A            489      JMP OOOI
0000142E                           490          
0000142E                           491  OOI:    
0000142E  0800 000C                492      BTST.L #12,D0
00001432  6700 0050                493      BEQ OOIO
00001436  4EF9 00001476            494      JMP OOII
0000143C                           495  
0000143C                           496  OOOO:
0000143C  0800 000B                497      BTST.L #11,D0
00001440  6700 0112                498      BEQ ERROR ;ERROR
00001444  4EF9 00001458            499      JMP OOOOI
0000144A                           500  
0000144A                           501  OOOI:
0000144A  0800 000B                502      BTST.L #11,D0
0000144E  6700 0012                503      BEQ OOOIO
00001452  4EF9 0000146C            504      JMP OOOII
00001458                           505  
00001458                           506  OOOOI:;TRA
00001458  3C3C 0000                507      MOVE.W #0,D6
0000145C  4EF9 00001558            508      JMP VEC
00001462                           509  OOOIO: ;ADD
00001462  3C3C 0001                510      MOVE.W #1,D6
00001466  4EF9 00001558            511      JMP VEC
0000146C                           512  OOOII: ; SUB
0000146C  3C3C 0002                513      MOVE.W #2,D6
00001470  4EF9 00001558            514      JMP VEC
00001476                           515  OOII:
00001476  0800 000B                516      BTST.L #11,D0
0000147A  6700 002A                517      BEQ OOIIO
0000147E  4EF9 00001554            518      JMP ERROR ; ERROR
00001484                           519  
00001484                           520  OOIO:
00001484  0800 000B                521      BTST.L #11,D0
00001488  6700 0008                522      BEQ OOIOO
0000148C  4EF9 0000149C            523      JMP OOIOI
00001492                           524  OOIOO: ; NAN
00001492  3C3C 0003                525      MOVE.W #3,D6
00001496  4EF9 00001558            526      JMP VEC
0000149C                           527  OOIOI: ; STC
0000149C  3C3C 0004                528      MOVE.W #4,D6
000014A0  4EF9 00001558            529      JMP VEC
000014A6                           530  OOIIO: ; INC
000014A6  3C3C 0005                531      MOVE.W #5,D6
000014AA  4EF9 00001558            532      JMP VEC
000014B0                           533  
000014B0                           534  
000014B0                           535  
000014B0                           536  
000014B0                           537     
000014B0                           538  OI:
000014B0  0800 000D                539      BTST.L #13,D0
000014B4  6700 0008                540      BEQ OIO
000014B8  4EF9 000014CC            541      JMP OII    
000014BE                           542  
000014BE                           543  OIO:
000014BE  0800 000C                544      BTST.L #12,D0
000014C2  6700 0016                545      BEQ OIOO
000014C6  4EF9 000014E4            546      JMP OIOI
000014CC                           547  OII:
000014CC  0800 000C                548      BTST.L #12,D0
000014D0  6700 001C                549      BEQ OIIO
000014D4  4EF9 000014F8            550      JMP OIII
000014DA                           551  OIOO: ;LOA  M   
000014DA  3C3C 0006                552      MOVE.W #6,D6
000014DE  4EF9 00001558            553      JMP VEC     
000014E4                           554  OIOI: ;LOAX M(Bi),Tj
000014E4  3C3C 0007                555      MOVE.W #7,D6
000014E8  4EF9 00001558            556      JMP VEC
000014EE                           557  OIIO: ;STO  M
000014EE  3C3C 0008                558      MOVE.W #8,D6
000014F2  4EF9 00001558            559      JMP VEC
000014F8                           560  OIII: ;STOX Tj,M(Bi)
000014F8  3C3C 0009                561      MOVE.W #9,D6
000014FC  4EF9 00001558            562      JMP VEC 
00001502                           563  II:   ; STP
00001502                           564      
00001502                           565      
00001502  3C3C 000D                566      MOVE.W #13,D6
00001506  4EF9 00001558            567      JMP VEC
0000150C                           568      
0000150C                           569  
0000150C                           570  IO:
0000150C  0800 000D                571      BTST.L #13,D0
00001510  6700 0008                572      BEQ IOO
00001514  4EF9 0000153C            573      JMP IOI
0000151A                           574  IOO:
0000151A  0800 000C                575      BTST.L #12,D0
0000151E  6700 0012                576      BEQ IOOO
00001522  4EF9 00001528            577      JMP IOOI
00001528                           578      
00001528                           579  IOOI: ;BRZ M
00001528  3C3C 000B                580      MOVE.W #11,D6
0000152C  4EF9 00001558            581      JMP VEC
00001532                           582  IOOO: ;BRI M
00001532  3C3C 000A                583      MOVE.W #10,D6
00001536  4EF9 00001558            584      JMP VEC      
0000153C                           585  IOI:
0000153C  0800 000C                586      BTST.L #12 ,D0
00001540  6700 0008                587      BEQ IOIO
00001544  4EF9 00001554            588      JMP ERROR ; error
0000154A                           589  
0000154A                           590      
0000154A                           591  IOIO: ;BRN M
0000154A  3C3C 000C                592      MOVE.W #12,D6
0000154E  4EF9 00001558            593      JMP VEC
00001554                           594      
00001554                           595  
00001554                           596  
00001554                           597  
00001554                           598      
00001554                           599  ERROR: 
00001554  FFFF FFFF                600      SIMHALT    
00001558                           601  VEC:
00001558  3F46 000A                602      MOVE.W D6,10(A7) ;AQUI ES DONDE PONEMOS EL ID AL FINAL DE LA PILA 
0000155C  4246                     603      CLR D6           
0000155E  4EF9 00001564            604      JMP FINAL 
00001564                           605         
00001564                           606  FINAL:
00001564  3C1F                     607      MOVE.W (A7)+,D6  ;RECUPERAMOS LOS VALORES DE LOS REGISTROS
00001566                           608                       ;PARA DEJARLOS COMO ESTABAN ANTES
00001566  301F                     609      MOVE.W (A7)+,D0  ;RTS TENEMOS LA DIRECCION PC Y LUEGO CUANDO 
00001568                           610                       ;VOLVEMOS AL PROG PRINCIPAL RECUPERAMOS EIR E ID
00001568  4E75                     611      RTS
0000156A                           612  
0000156A                           613  
0000156A                           614      ;--- FDECOD: FIN DECOD
0000156A                           615      END    START

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
B0                  1390
B1                  139A
C0                  12FC
C1                  1308
CREG                132E
DECOD               13E0
EADD                10FE
EB0                 1032
EB1                 1034
EBRI                127C
EBRN                12AA
EBRZ                128E
EINC                11C4
EIR                 102E
ELOA                11F0
ELOAX               121C
EMEM                1000
ENAN                1166
EPC                 1030
ER2                 1036
ER3                 1038
ER4                 103A
ER5                 103C
ERROR               1554
ESR                 1042
ESTC                119A
ESTO                1274
ESTOX               1278
ESTP                12C6
ESUB                1130
ET6                 103E
ET7                 1040
ETRA                10CE
FETCH               1048
FINAL               1564
FLAGC               12EC
FLAGS               12CA
FLAGZ               130E
FN0                 131E
FN1                 1326
I                   13F6
II                  1502
IO                  150C
IOI                 153C
IOIO                154A
IOO                 151A
IOOI                1528
IOOO                1532
JMPLIST             107A
N0                  12DA
N1                  12E6
O                   1404
OI                  14B0
OII                 14CC
OIII                14F8
OIIO                14EE
OIO                 14BE
OIOI                14E4
OIOO                14DA
OO                  1412
OOI                 142E
OOII                1476
OOIIO               14A6
OOIO                1484
OOIOI               149C
OOIOO               1492
OOO                 1420
OOOI                144A
OOOII               146C
OOOIO               1462
OOOO                143C
OOOOI               1458
R2                  13A4
R3                  13AE
R4                  13B8
R5                  13C2
REG0                134A
REG00               1382
REG01               1358
REG1                133C
REG10               1366
REG11               1374
START               1044
T6                  13CC
T7                  13D6
VEC                 1558
